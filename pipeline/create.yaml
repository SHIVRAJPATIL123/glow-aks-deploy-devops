# azure-pipelines.yml
trigger:
  branches:
    include:
    - main
    - feature/*
  paths:
    include:
    - terraform/*

variables:
  - group: terraform-secrets

stages:
- stage: Validate
  jobs:
  - job: terraform_validate
    pool:
      vmImage: 'windows-latest'
    steps:

    - task: TerraformInstaller@1
      inputs:
        terraformVersion: '1.6.6'

    - task: CmdLine@2
      inputs:
        script: 'terraform -version'

    # - powershell: |
    #     Get-ChildItem "C:\hostedtoolcache\windows\terraform\1.12.2\x64"

    - task: CmdLine@2
      inputs:
        script: |
          terraform -version
          terraform init -backend-config="storage_account_name=glowsatf" `
                        -backend-config="container_name=sacont" `
                        -backend-config="key=dev.terraform.tfstate" `
                        -backend-config="resource_group_name=AZ-104" `
                        -backend-config="subscription_id=f510d486-a17f-44f2-a1c4-63a7186e923c" `
                        -backend-config="use_azuread_auth=true"
        workingDirectory: '$(System.DefaultWorkingDirectory)\terraform\dev'
    
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'

- stage: Dev_Deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: terraform_apply_dev
    environment: dev
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: '1.5.7'
          
          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'
              environmentServiceNameAzureRM: 'TerraformServiceConnection'

- stage: Test_Deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: terraform_apply_test
    environment: test
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: '1.5.7'
          
          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/test'
              environmentServiceNameAzureRM: 'TerraformServiceConnection'
