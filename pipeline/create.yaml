trigger:
  branches:
    include:
      - main
      - feature/*
  paths:
    include:
      - terraform/*

variables:
  - group: terraform-secrets

stages:
- stage: Validate
  displayName: 'Terraform Validate'
  jobs:
  - job: terraform_validate
    displayName: 'Terraform Init and Validate'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: TerraformInstaller@0
      displayName: 'Install Terraform 1.12.2'
      inputs:
        terraformVersion: '1.12.2'

    - script: |
        which terraform
        terraform version
      displayName: 'Verify Terraform installation'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'
        backendServiceArm: 'TerraformServiceConnection'
        backendAzureRmResourceGroupName: 'Az-104'
        backendAzureRmStorageAccountName: 'glowsatf'
        backendAzureRmContainerName: 'sacont'
        backendAzureRmKey: 'dev.terraform.tfstate'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'

- stage: Dev_Deploy
  displayName: 'Terraform Apply - Dev'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: terraform_apply_dev
    environment: dev
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: TerraformInstaller@0
            displayName: 'Install Terraform 1.12.2'
            inputs:
              terraformVersion: '1.12.2'

          - script: |
              which terraform
              terraform version
            displayName: 'Verify Terraform installation'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply Dev'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'
              environmentServiceNameAzureRM: 'TerraformServiceConnection'
              commandOptions: '-auto-approve'

- stage: Test_Deploy
  displayName: 'Terraform Apply - Test'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: terraform_apply_test
    environment: test
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: TerraformInstaller@0
            displayName: 'Install Terraform 1.12.2'
            inputs:
              terraformVersion: '1.12.2'

          - script: |
              which terraform
              terraform version
            displayName: 'Verify Terraform installation'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply Test'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/test'
              environmentServiceNameAzureRM: 'TerraformServiceConnection'
              commandOptions: '-auto-approve'
