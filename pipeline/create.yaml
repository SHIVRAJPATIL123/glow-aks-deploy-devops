# azure-pipelines.yml
trigger:
  branches:
    include:
    - main
    - feature/*
  paths:
    include:
    - terraform/*

variables:
  - group: terraform-secrets

stages:
- stage: Validate
  jobs:
  - job: terraform_validate
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self # Ensure repository is checked out
    
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '1.5.7'
    
    - bash: |
        echo "Verifying Terraform installation at /opt/hostedtoolcache/terraform/1.5.7/x64/"
        ls -l /opt/hostedtoolcache/terraform/1.5.7/x64/
        # Also try to run terraform directly to confirm it's executable
        /opt/hostedtoolcache/terraform/1.5.7/x64/terraform --version
      displayName: 'Verify Terraform Installation and Executability'
      continueOnError: true # Allow pipeline to continue even if this fails, for more debugging info
    
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'
        backendServiceArm: 'TerraformServiceConnection'
        backendAzureRmResourceGroupName: 'AZ-104'
        backendAzureRmStorageAccountName: 'glowsatf'
        backendAzureRmContainerName: 'sacont'
        backendAzureRmKey: 'dev.terraform.tfstate'
    
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'

# ... (rest of your stages, apply the same checkout and verification if needed)