trigger:
  branches:
    include:
      - main
      - feature/*
  paths:
    include:
      - terraform/*

variables:
  - group: terraform-secrets

stages:
  - stage: validate
    jobs:
      - job: tf_validate
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: '1.9.0' # or 'latest'

          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'
              backendServiceArm: 'TerraformServiceConnection'
              backendAzureRmResourceGroupName: 'AZ-104'
              backendAzureRmStorageAccountName: 'glowsatf'
              backendAzureRmContainerName: 'sacont'
              backendAzureRmKey: 'dev.tfstate'

          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'

          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'
              environmentServiceNameAzureRM: 'TerraformServiceConnection'

  - stage: Dev_destroy
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - job: tf_destroy
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: '1.9.0' # or 'latest'

          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'
              backendServiceArm: 'TerraformServiceConnection'
              backendAzureRmResourceGroupName: 'AZ-104'
              backendAzureRmStorageAccountName: 'glowsatf'
              backendAzureRmContainerName: 'sacont'
              backendAzureRmKey: 'dev.tfstate'

          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'
              environmentServiceNameAzureRM: 'TerraformServiceConnection'

          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/dev'
              commandOptions: '--auto-approve'
              environmentServiceNameAzureRM: 'TerraformServiceConnection'
